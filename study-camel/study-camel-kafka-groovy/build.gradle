/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4.2/samples
 */

plugins {
    id 'groovy'
    id 'application'
}

apply plugin: 'groovy'
//apply plugin: 'application'
//application {
//    mainClassName = 'org.example.App'
//}

group 'org.example'
version '1.0.Groovy-SNAPSHOT'

repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
}

dependencies {
    implementation "org.testcontainers:kafka:1.17.1"
    implementation "commons-cli:commons-cli:1.5.0"
    implementation "org.codehaus.groovy:groovy:3.0.10"
    implementation "org.apache.camel:camel-core:3.16.0"
    implementation "org.apache.camel:camel-kafka:3.16.0"
    implementation "org.apache.logging.log4j:log4j-api:2.17.2"
    implementation "org.apache.logging.log4j:log4j-core:2.17.2"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.17.2"
    testImplementation "org.codehaus.groovy:groovy-test:3.0.10"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

tasks.named("build") { finalizedBy("buildLast") }

task buildLast {
    FileWriter writer = new FileWriter(new File(project.buildDir, "run.sh"))
    String cmdLine = "java -classpath ${-> sourceSets.main.runtimeClasspath.getAsPath()} org.example.App"
    writer.write(cmdLine)
    writer.close()
    println cmdLine
}
